Soar (SOAR) とは、カーネギーメロン大学の John Laird、アレン・ニューウェル、Paul Rosenbloomが作成した認知アーキテクチャの一種。
認識とは何かという観点と、それに基づいた人工知能用のプログラムアーキテクチャの観点から構成される。
1983年に最初に作成され、1987年に論文として発表されて以来、多くの人工知能研究者が人間の行動の様々な観点の認知モデルを作成するのにSoarを用いている。
Soarプロジェクトの主な目的は、高度なルーチン処理から非常に難しい開放型問題を解くことまで可能な知的エージェントの能力を完全に扱うことができるようにすることである。
そのため、Soarでは知識表現を生成し、適切な形式の知識（手続き的知識、宣言的知識、エピソード的知識、さらには象徴的知識）を扱えなければならない。
さらにSoarプロジェクトは精神の仕組みを集積しようとしている。
また、Soarを支えるアーキテクチャには知能を支えるのに十分な記号システムが必要である。
Soarの根底にある認識に関する見方はアレン・ニューウェルの著書Unified Theories of Cognitionで述べられている心理学的理論に基づいている。
Soarの最終目標は真の人工知能を生み出すことであるが、今のところそれが達成された様子はない。
Soar支持者は、このシステムが知能の何か重要な部分で間違っていると認めている。
現在、Soarにエピソード記憶と意味論的記憶を追加するプロジェクトが進行中であり、他にも感情を与えるプロジェクトも進行中である。
他に足りない機能として、階層的クラスタリングなどを通して自身の新たな表現を自動生成する能力などが考えられている。
Soarはプロダクションシステムに基づいている。
すなわち、明示的なプロダクションルール（生成規則）によって振る舞いを制御する（エキスパートシステムの 「もし…ならば、…」という規則と類似）。
問題解決を大まかに説明すると、「問題空間」（システムがある時間内にとりうる状態の集合）を検索し「ゴール状態」（問題の解決した状態）を見つけ出すのである。
システムは徐々にゴールに近い状態を取るよう検索していく。
状態から状態への移動は、推敲フェーズ（問題に関連する様々な知識の断片をSoarのワーキングメモリに持ってくる）と決定手順（前のフェーズで見つかったものを考慮し、最終的に次の行動を決定する）から構成される決定サイクルでなされる。
この決定手順が唯一の行動指針を決定できない場合、Soarは他の戦略を試みる。
それらはweak methodsと呼ばれ、袋小路となった状態からの脱出に使われる。
このような手法は知識が豊富でない場合には適切である。
例えば、手段目標分析や山登り法が考えられる。
そのような手法で解法が見つかるとSoarはチャンキングと呼ばれる学習手法を使い、この状態遷移を新たなルールに変換する。
新たなルールはSoarが同様の状況に直面したときに利用される（つまり、次回からは袋小路に陥らない）。
ACT-Rはジョン・R・アンダーソンの開発した別の認知アーキテクチャである。
他の認知アーキテクチャとして、CLARION、ICARUS、DUAL、Psiなどがある。